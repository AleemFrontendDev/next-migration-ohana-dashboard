import React, { useEffect, useState } from "react";
import Spinner from "@/components/Spinner/Spinner";
import { Trans } from "react-i18next";

export function TopGroups(param) {
  const [spinner, setSpinner] = useState(true);
  const [sortedGroups, setSortedGroups] = useState(true);
  const { groups, permissions } = param;

  useEffect(() => {
    setSortedGroups(groups);
    setSpinner(false);
  }, [groups]);

  const runCallback = (cb) => {
    return cb();
  };

  return (
    <>
      {permissions && !spinner ? (
        <>
          <table className="table">
            <thead></thead>
            <tbody>
              {runCallback(() => {
                const row = [];
                sortedGroups.slice(0, 5).map((group) => {
                  row.push(
                    <tr key={group.id}>
                      <td style={{ padding: "4px 13px 2px 8px" }}>
                        <div className="icon-holder alert-success text-success py-2 px-2 rounded mr-2">
                          <svg
                            width="17"
                            height="15"
                            viewBox="0 0 25 25"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M12.7023 24.9744C12.566 24.9744 12.4468 24.9744 12.3105 24.9744C12.2083 24.9063 12.1061 24.8552 12.0039 24.7871C8.15449 22.3855 4.32209 19.9668 0.472662 17.5651C-0.157554 17.1734 -0.157554 16.5602 0.472662 16.1685C1.18804 15.7086 1.92046 15.2657 2.63584 14.8058C2.70397 14.7547 2.7721 14.7207 2.85726 14.6525C2.03969 14.1415 1.25617 13.6476 0.472662 13.1536C-0.157554 12.7619 -0.157554 12.1487 0.472662 11.7569C1.18804 11.2971 1.92046 10.8542 2.63584 10.3943C2.70397 10.3432 2.7721 10.3091 2.85726 10.241C2.73803 10.1559 2.65287 10.1048 2.55067 10.0537C1.81826 9.59377 1.10288 9.15091 0.387498 8.69102C-0.123488 8.35037 -0.123488 7.75422 0.387498 7.41356C0.455629 7.37949 0.506728 7.32839 0.574859 7.29433C4.35616 4.94379 8.13745 2.57622 11.9188 0.19162C12.3275 -0.0638733 12.6852 -0.0638733 13.094 0.19162C16.8753 2.57622 20.6566 4.92676 24.4379 7.29433C24.6764 7.44762 24.8808 7.61795 25 7.87345C25 8.00971 25 8.12894 25 8.2652C24.8808 8.52069 24.6764 8.69102 24.4379 8.84432C23.9099 9.16794 23.3819 9.49157 22.8539 9.83223C22.6324 9.96849 22.411 10.1048 22.1555 10.2751C22.2407 10.3432 22.3088 10.3773 22.3769 10.4284C23.0583 10.8542 23.7396 11.2971 24.4379 11.7058C24.6764 11.8591 24.8808 12.0124 25 12.285C25 12.4212 25 12.5405 25 12.6767C24.8808 12.9322 24.6764 13.1025 24.4379 13.2558C23.944 13.5454 23.467 13.852 22.9731 14.1586C22.7006 14.3289 22.4451 14.4822 22.1555 14.6696C22.2407 14.7377 22.3088 14.7718 22.3769 14.8229C23.0583 15.2487 23.7396 15.6915 24.4379 16.1003C24.6764 16.2536 24.8808 16.4069 25 16.6794C25 16.8157 25 16.9349 25 17.0712C24.8637 17.2245 24.7445 17.4459 24.5742 17.5481C20.6055 20.0179 16.6539 22.5047 12.7023 24.9744ZM2.14188 8.07784C2.22705 8.12894 2.27815 8.18004 2.32925 8.19707C5.66769 10.2751 9.00613 12.3531 12.3446 14.4311C12.4808 14.5163 12.566 14.4992 12.6852 14.4141C16.0066 12.3361 19.3281 10.2751 22.6495 8.19707C22.7176 8.163 22.7687 8.11191 22.8539 8.06081C22.8028 8.02674 22.7687 7.99268 22.7346 7.97564C19.3792 5.8806 16.0066 3.78556 12.6512 1.67348C12.5149 1.58832 12.4297 1.62238 12.3105 1.69051C10.3006 2.95094 8.29075 4.21138 6.28087 5.47181C4.91824 6.34049 3.53858 7.19213 2.14188 8.07784ZM22.8709 16.8668C22.2407 16.475 21.6445 16.1344 21.0824 15.7426C20.8099 15.5553 20.6396 15.5893 20.3841 15.7426C17.9484 17.2756 15.5127 18.7745 13.094 20.3074C12.6852 20.5629 12.3446 20.58 11.9188 20.3074C9.44899 18.7575 6.96219 17.2075 4.47539 15.6575C4.32209 15.5553 4.20286 15.5382 4.04957 15.6575C3.48748 16.0322 2.9254 16.3728 2.36331 16.7305C2.29518 16.7646 2.22705 16.8157 2.15892 16.8838C2.24408 16.9349 2.29518 16.986 2.34628 17.0201C5.66769 19.0981 8.9891 21.1932 12.3105 23.2712C12.4638 23.3734 12.566 23.3563 12.7023 23.2712C15.0528 21.7893 17.4033 20.3245 19.7368 18.8596C20.7758 18.1954 21.7978 17.5481 22.8709 16.8668ZM22.8539 12.4723C22.7687 12.4212 22.7006 12.3701 22.6324 12.319C22.0703 11.9613 21.4912 11.6207 20.9462 11.263C20.7929 11.1608 20.6907 11.1778 20.5374 11.263C18.0506 12.813 15.5638 14.3459 13.094 15.913C12.6682 16.1685 12.3275 16.1855 11.9017 15.913C9.43195 14.3459 6.92812 12.813 4.44132 11.246C4.30506 11.1608 4.21989 11.1438 4.0666 11.246C3.48748 11.6207 2.89133 11.9784 2.31221 12.3531C2.26111 12.3872 2.21002 12.4383 2.14188 12.4894C2.22705 12.5405 2.27815 12.5745 2.32925 12.6086C5.66769 14.6866 8.9891 16.7476 12.3105 18.8256C12.4638 18.9107 12.549 18.8937 12.6682 18.8085C15.9726 16.7476 19.294 14.6866 22.5984 12.6256C22.7006 12.5916 22.7687 12.5405 22.8539 12.4723Z"
                              fill="#33861D"
                            />
                          </svg>
                        </div>
                      </td>
                      <td style={{ padding: "7px 0px 0px 0px" }}>
                        <p className="mb-n1 small text-muted">
                          <Trans>Group Name</Trans>
                        </p>
                        <p className="mt-2 small font-weight-bold">
                          {group.title}
                        </p>
                      </td>
                      <td style={{ padding: "7px 0px 0px 0px" }}>
                        <p className="mb-n1 small text-muted">Pools</p>
                        <p className="mt-2 small font-weight-bold">
                          {group.balance} {group.currency}
                        </p>
                      </td>
                      <td style={{ padding: "7px 0px 0px 0px" }}>
                        <p className="mb-n1 small text-muted">Country</p>
                        <p className="mt-2 small font-weight-bold">
                          {group.country.nicename}
                        </p>
                      </td>
                    </tr>
                  );
                });
                return row;
              })}
            </tbody>
          </table>
        </>
      ) : spinner ? (
        <Spinner
          animation="grow"
          style={{ left: "45%", bottom: "50%", position: "absolute" }}
        />
      ) : (
        <>
          <h1 className="text-center mt-5 pt-5">Permission Denied!</h1>
          <p className="text-center mt-3">
            Sorry!, You don't have permission to access this module.
          </p>
        </>
      )}
    </>
  );
}
export default TopGroups;
